<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.coding404.myweb.product.service.ProductMapper">

    <insert id="productRegist" parameterType="ProductVO">
        insert into PRODUCT (prod_enddate, prod_writer, prod_name, prod_price, prod_count,
                             prod_discount, prod_purchase_yn, prod_content, prod_comment)
                            values(#{prodEnddate}, #{prodWriter}, #{prodName}, #{prodPrice},
                                   #{prodCount}, #{prodDiscount}, #{prodPurchaseYn},
                                   #{prodContent}, #{prodComment})
    </insert>

    <!-- 동적 쿼리 구문의 if, choose, foreach
    test에는 getter명이 들어감-->
    <select id="getList" resultType="ProductVO">
        select * from PRODUCT
                 where prod_writer = #{prodWriter}
                 <if test="cri.searchName != '' and cri.searchName != null">
                     and prod_name like concat('%', #{cri.searchName}, '%')
                 </if>
                 <if test="cri.searchContent != '' and cri.searchContent != null">
                     and prod_content like concat('%', #{cri.searchContent}, '%')
                 </if>
                <if test="cri.startDate != '' and cri.startDate != null">
                    <![CDATA[
                   and str_to_date(prod_enddate, '%Y-%m-%d') >= str_to_date(#{cri.startDate}, '%Y-%m-%d')
                    ]]>
                </if>
                <if test="cri.endDate != '' and cri.endDate != null">
                   <![CDATA[
                    and str_to_date(prod_enddate, '%Y-%m-%d') <= str_to_date(#{cri.endDate}, '%Y-%m-%d')
                    ]]>
                 </if>
                order by
                <if test="cri.searchPrice == 'asc'">
                    prod_price asc,
                </if>
                <if test="cri.searchPrice == 'desc'">
                    prod_price desc,
                </if>

                prod_id desc

                 limit #{cri.pageStart}, #{cri.amount}
    </select>

    <select id="getTotal" resultType="int">
        select count(*) as total
            from PRODUCT
            where prod_writer = #{prodWriter}
            <if test="cri.searchName != '' and cri.searchName != null">
                and prod_name like concat('%', #{cri.searchName}, '%')
            </if>
            <if test="cri.searchContent != '' and cri.searchContent != null">
                and prod_content like concat('%', #{cri.searchContent}, '%')
            </if>
            <if test="cri.startDate != '' and cri.startDate != null">
                <![CDATA[
                       and str_to_date(prod_enddate, '%Y-%m-%d') >= str_to_date(#{cri.startDate}, '%Y-%m-%d')
                        ]]>
            </if>
            <if test="cri.endDate != '' and cri.endDate != null">
                <![CDATA[
                        and str_to_date(prod_enddate, '%Y-%m-%d') <= str_to_date(#{cri.endDate}, '%Y-%m-%d')
                        ]]>
            </if>
    </select>

    <select id="getDetail" resultType="ProductVO">
        select * from PRODUCT where prod_id = #{prodId}
    </select>

    <update id="productUpdate" parameterType="ProductVO">
        update PRODUCT set prod_enddate=#{prodEnddate}, prod_name=#{prodName},
                           prod_price=#{prodPrice}, prod_count=#{prodCount},
                           prod_discount=#{prodDiscount}, prod_purchase_yn=#{prodPurchaseYn},
                           prod_content=#{prodContent}, prod_comment=#{prodComment}
                       where prod_id=#{prodId}
    </update>

    <delete id="productDelete" parameterType="ProductVO">
        delete from PRODUCT where prod_id=#{prodId}
    </delete>

</mapper>